#person_fields_container
  #person_fields
    %label{:for => "suggestable_query")} Name
      = text_field_tag :query, nil, :id => 'suggestable_query'

#person_suggestions_container
  .spinner#person_suggestions_spinner{:style => 'display: none'}
  #autocomplete.choose_person_panel

  #add_person_panel{:style => 'display: none'}

:javascript
  var autocompleter = new Ajax.Autocompleter(
    'suggestable_query',
    'choose_person_panel',
    '/person_suggestions',
    {
      asynchronous:true,
      parameters: 'from_person_id=#{@from_person.nil? ? nil : @from_person.id}', evalScripts:true, method:'get',
      updateElement: autocompleter_updateElement,
      indicator: 'person_suggestions_spinner',
      minChars: 3
    }
  );
  var event_ids = [];
  function autocompleter_updateElement(selectedElement) {
    if (selectedElement.id.indexOf('selectable') !=0) {
     if (selectedElement.id.indexOf('add_new_person_link') == 0) {
        add_new_person();
      } else {
        $('suggestable_query').focus();
        hide_start_over_link();
      }
      return;
    }
    var id = selectedElement.id.substring('selectable'.length+1);
    show_start_over_link();
    notify_person_chosen(id, false);
  }
  function autocompleter_updateChoices(transport) {
    autocompleter.hasFocus = true;
    autocompleter.updateChoices(transport.responseText);
  }

  function show_person_suggestions_spinner() {
    $('person_suggestions_spinner').style.visibility='visible';
  }

  function hide_person_suggestions_spinner() {
    $('person_suggestions_spinner').style.visibility='hidden';
  }

  function add_new_person() {
    var query_parameters = 'query='+$('suggestable_query').value;
    new Ajax.Request('#{new_story_path}', {asynchronous:true, evalScripts:true, parameters:query_parameters, method:'get'});
    return true;
  }
